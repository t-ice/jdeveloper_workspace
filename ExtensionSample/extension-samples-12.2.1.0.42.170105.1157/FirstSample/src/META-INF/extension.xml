<?xml version="1.0" encoding="UTF-8" ?>
<!-- $Header: jdev/src/esdk-samples/sample/FirstSample/src/META-INF/extension.xml /main/13 2014/03/18 17:54:19 ppark Exp $  -->
<!--
 Copyright (c) 2007, 2014, Oracle and/or its affiliates. All rights reserved.

   MODIFIED   (MM/DD/YY)
   alfarouk    09/19/10 - Modified to be compatible with on-demand loading
   bduff       07/02/07 - Bug 5957816 - Validation error in gallery hook.
   bduff       05/29/07 - Bug 6080680 - Missing imports preventing compile.
   bduff       02/27/07 - Added copyright header. Fix broken gallery hook.

-->

<extension xmlns="http://jcp.org/jsr/198/extension-manifest"
  id="oracle.ide.extsamples.first"
  version="11.1.1"
  esdk-version="1.0">
           
  <name>ESDK Sample - FirstSample</name>
  <owner>Oracle</owner>
  
  <feature-member id="esdk-samples" xmlns="http://xmlns.oracle.com/ide/extension"/>

  <trigger-hooks xmlns="http://xmlns.oracle.com/ide/extension">
    <triggers>
      <gallery xmlns="http://xmlns.oracle.com/jdeveloper/1013/extension">
        <folders>
          <name label="Extension SDK Sample First">Extension SDK Sample First</name>
          <category>General</category>
        </folders>
        <item rule="always-enabled">
          <!-- name is the fully-qualified name of an oracle.ide.wizard.Invokable  -->
          <name>oracle.ide.extsamples.firstsample.SimpleWizard</name>

          <!-- id is optional, and if specified will be stored in the Context
           so it can be retrieved when the wizard is invoked. -->
          <id>oracle.ide.extsamples.firstsample.SimpleWizard</id>

          <!-- description is the short label of the gallery item -->
          <description>Sample Wizard from ESDK</description>

          <!-- help is the long label for the gallery item -->
          <help>This wizard is for demonstration purposes only.</help>
          
           <!-- use an icon, stealing this one from predefined icons              
               make sure you have oracle.icon as a required bundle to
               pick up this icon at run time from the icons module  -->
          <icon>${OracleIcons.LABEL}</icon> 
          
          <category>General</category>
          <folder>Extension SDK Sample First</folder>
        </item>
      </gallery>


      <!-- 
        Define an action that will be used in various menus and toolbars.
        You can set any Swing action property on the action. The controller
        class implements oracle.ide.controller.Controller and determines
        when the action is enabled and what it does.
        
        You can use an ampersand (escaped as &amp;) in the Name property
        to specify the mnemonic for any menu items containing the action.
      -->
      <actions xmlns="http://xmlns.oracle.com/jdeveloper/1013/extension">
        <action id="oracle.ide.extsamples.first.invokeAction">
          <properties>
            <property name="Name">&amp;Extension SDK First Sample</property>
             <!-- use an icon, stealing this one from predefined icons              
                  make sure you have oracle.icon as a required bundle to
                  pick up this icon at run time from the icons module  -->
            <property name="SmallIcon">${OracleIcons.LABEL}</property>
          </properties>
        </action>
      </actions>

      <controllers xmlns="http://xmlns.oracle.com/ide/extension">
        <controller class="oracle.ide.extsamples.firstsample.SimpleController">
          <update-rules>
            <update-rule rule="always-enabled">
              <action id="oracle.ide.extsamples.first.invokeAction">
                <label>ESDK Sample Action</label>
              </action>
            </update-rule>
          </update-rules>
        </controller>
      </controllers>
      <!--
        Install context menus in the navigator, editor, and structure pane (explorer)
        which use the same action defined above.
      -->
      <context-menu-hook rule="always-enabled">
        <site idref="navigator, editor, explorer"/>
          <menu>
            <!-- 'weight' is used to control where the section appears in
             the menu. Weights are sorted in ascending order, each unique
             value is its own section. -->
            <!-- section element must be in namespace
             http://jcp.org/jsr/198/extension-manifest. -->
            <section xmlns="http://jcp.org/jsr/198/extension-manifest" id="MY_CUSTOM_MENU_SECTION_ONE" weight="1.0">
              <!-- For menu items and submenus, weight determines the
               order within a menu section. Items are sorted in ascending
               order or in the order they are added if the weight is not
               unique. -->
             <item action-ref="oracle.ide.extsamples.first.invokeAction"></item>
           </section>
         </menu>
      </context-menu-hook>

      <menu-hook xmlns="http://jcp.org/jsr/198/extension-manifest">
        <!-- 
          Add the action in its own separator group at the top of the File 
          menu. 
        -->
        <menus>
          <menubar id="javax.ide.view.MAIN_WINDOW_MENUBAR_ID">
            <menu id="javax.ide.FILE_MENU_ID">
              <section id="esdksample.customsection" before="javax.ide.NEW_SECTION_ID">
                <item action-ref="oracle.ide.extsamples.first.invokeAction"></item>
              </section>
            </menu>
          </menubar>
        </menus>


        <!--
          Add the action as toolbar button in its own separator group immediately after the 
          existing "save" toolbar buttons.
        -->           
        <toolbars>
          <toolbar id="javax.ide.view.MAIN_WINDOW_TOOLBAR_ID">
            <!-- Add a new section after the first section in the toolbar. -->
            <section id="javax.ide.tck.toolbar.testsection"
                   after="javax.ide.NEW_SECTION_ID">
              <item action-ref="oracle.ide.extsamples.first.invokeAction"></item>
            </section>
          </toolbar>
        </toolbars>
      </menu-hook>

   </triggers>
 </trigger-hooks>
</extension>            
