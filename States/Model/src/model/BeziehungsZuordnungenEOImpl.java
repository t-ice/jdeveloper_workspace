package model;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 29 15:29:42 CEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BeziehungsZuordnungenEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        Person1Id,
        Person2Id,
        BezTypId,
        State,
        BeziehungsZuordnungen,
        Person2IdBeziehungsZuordnungen,
        BeziehungsZuordnungen1,
        BezTypIdBeziehungsZuordnungen,
        BeziehungsZuordnungen2,
        Person1IdBeziehungsZuordnungen,
        Personen,
        Personen1,
        Personen2,
        Beziehungstypen,
        Beziehungstypen1,
        Beziehungstypen2;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    private IState iState;


    public static final int ID = AttributesEnum.Id.index();
    public static final int PERSON1ID = AttributesEnum.Person1Id.index();
    public static final int PERSON2ID = AttributesEnum.Person2Id.index();
    public static final int BEZTYPID = AttributesEnum.BezTypId.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int BEZIEHUNGSZUORDNUNGEN = AttributesEnum.BeziehungsZuordnungen.index();
    public static final int PERSON2IDBEZIEHUNGSZUORDNUNGEN = AttributesEnum.Person2IdBeziehungsZuordnungen.index();
    public static final int BEZIEHUNGSZUORDNUNGEN1 = AttributesEnum.BeziehungsZuordnungen1.index();
    public static final int BEZTYPIDBEZIEHUNGSZUORDNUNGEN = AttributesEnum.BezTypIdBeziehungsZuordnungen.index();
    public static final int BEZIEHUNGSZUORDNUNGEN2 = AttributesEnum.BeziehungsZuordnungen2.index();
    public static final int PERSON1IDBEZIEHUNGSZUORDNUNGEN = AttributesEnum.Person1IdBeziehungsZuordnungen.index();
    public static final int PERSONEN = AttributesEnum.Personen.index();
    public static final int PERSONEN1 = AttributesEnum.Personen1.index();
    public static final int PERSONEN2 = AttributesEnum.Personen2.index();
    public static final int BEZIEHUNGSTYPEN = AttributesEnum.Beziehungstypen.index();
    public static final int BEZIEHUNGSTYPEN1 = AttributesEnum.Beziehungstypen1.index();
    public static final int BEZIEHUNGSTYPEN2 = AttributesEnum.Beziehungstypen2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BeziehungsZuordnungenEOImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public Integer getId() {
        return (Integer) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Integer value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Person1Id, using the alias name Person1Id.
     * @return the value of Person1Id
     */
    public Integer getPerson1Id() {
        return (Integer) getAttributeInternal(PERSON1ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Person1Id.
     * @param value value to set the Person1Id
     */
    public void setPerson1Id(Integer value) {
        setAttributeInternal(PERSON1ID, value);
    }

    /**
     * Gets the attribute value for Person2Id, using the alias name Person2Id.
     * @return the value of Person2Id
     */
    public Integer getPerson2Id() {
        return (Integer) getAttributeInternal(PERSON2ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Person2Id.
     * @param value value to set the Person2Id
     */
    public void setPerson2Id(Integer value) {
        setAttributeInternal(PERSON2ID, value);
    }

    /**
     * Gets the attribute value for BezTypId, using the alias name BezTypId.
     * @return the value of BezTypId
     */
    public Integer getBezTypId() {
        return (Integer) getAttributeInternal(BEZTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BezTypId.
     * @param value value to set the BezTypId
     */
    public void setBezTypId(Integer value) {
        setAttributeInternal(BEZTYPID, value);
    }

    /**
     * Gets the attribute value for State, using the alias name State.
     * @return the value of State
     */
    public String getState() {
        return (String) getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for State.
     * @param value value to set the State
     */
    public void setState(String value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getBeziehungsZuordnungen() {
        return (RowIterator) getAttributeInternal(BEZIEHUNGSZUORDNUNGEN);
    }

    /**
     * @return the associated entity BeziehungsZuordnungenEOImpl.
     */
    public BeziehungsZuordnungenEOImpl getPerson2IdBeziehungsZuordnungen() {
        return (BeziehungsZuordnungenEOImpl) getAttributeInternal(PERSON2IDBEZIEHUNGSZUORDNUNGEN);
    }

    /**
     * Sets <code>value</code> as the associated entity BeziehungsZuordnungenEOImpl.
     */
    public void setPerson2IdBeziehungsZuordnungen(BeziehungsZuordnungenEOImpl value) {
        setAttributeInternal(PERSON2IDBEZIEHUNGSZUORDNUNGEN, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getBeziehungsZuordnungen1() {
        return (RowIterator) getAttributeInternal(BEZIEHUNGSZUORDNUNGEN1);
    }

    /**
     * @return the associated entity BeziehungsZuordnungenEOImpl.
     */
    public BeziehungsZuordnungenEOImpl getBezTypIdBeziehungsZuordnungen() {
        return (BeziehungsZuordnungenEOImpl) getAttributeInternal(BEZTYPIDBEZIEHUNGSZUORDNUNGEN);
    }

    /**
     * Sets <code>value</code> as the associated entity BeziehungsZuordnungenEOImpl.
     */
    public void setBezTypIdBeziehungsZuordnungen(BeziehungsZuordnungenEOImpl value) {
        setAttributeInternal(BEZTYPIDBEZIEHUNGSZUORDNUNGEN, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getBeziehungsZuordnungen2() {
        return (RowIterator) getAttributeInternal(BEZIEHUNGSZUORDNUNGEN2);
    }

    /**
     * @return the associated entity BeziehungsZuordnungenEOImpl.
     */
    public BeziehungsZuordnungenEOImpl getPerson1IdBeziehungsZuordnungen() {
        return (BeziehungsZuordnungenEOImpl) getAttributeInternal(PERSON1IDBEZIEHUNGSZUORDNUNGEN);
    }

    /**
     * Sets <code>value</code> as the associated entity BeziehungsZuordnungenEOImpl.
     */
    public void setPerson1IdBeziehungsZuordnungen(BeziehungsZuordnungenEOImpl value) {
        setAttributeInternal(PERSON1IDBEZIEHUNGSZUORDNUNGEN, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getPersonen() {
        return (EntityImpl) getAttributeInternal(PERSONEN);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setPersonen(EntityImpl value) {
        setAttributeInternal(PERSONEN, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getPersonen1() {
        return (EntityImpl) getAttributeInternal(PERSONEN1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setPersonen1(EntityImpl value) {
        setAttributeInternal(PERSONEN1, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getPersonen2() {
        return (EntityImpl) getAttributeInternal(PERSONEN2);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setPersonen2(EntityImpl value) {
        setAttributeInternal(PERSONEN2, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getBeziehungstypen() {
        return (EntityImpl) getAttributeInternal(BEZIEHUNGSTYPEN);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setBeziehungstypen(EntityImpl value) {
        setAttributeInternal(BEZIEHUNGSTYPEN, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getBeziehungstypen1() {
        return (EntityImpl) getAttributeInternal(BEZIEHUNGSTYPEN1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setBeziehungstypen1(EntityImpl value) {
        setAttributeInternal(BEZIEHUNGSTYPEN1, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getBeziehungstypen2() {
        return (EntityImpl) getAttributeInternal(BEZIEHUNGSTYPEN2);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setBeziehungstypen2(EntityImpl value) {
        setAttributeInternal(BEZIEHUNGSTYPEN2, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.BeziehungsZuordnungenEO");
    }


    public IState getIState() {
        return this.iState == null ? StateFactory.createState(getState()) : this.iState;
    }
    
    public IState doAction(String action){
        return getIState().doAction(action);
    }
}

